/home/bhavika/anaconda2/bin/python /home/bhavika/PycharmProjects/JoyDivision/src/gridsearch_rfc.py
<class 'pandas.core.frame.DataFrame'>
Index: 686 entries, 0 to 1116
Columns: 145 entries, File to Beats
dtypes: float64(126), int64(5), object(14)
memory usage: 782.5+ KB
None
RFC grid search:
CV results {'rank_test_score': array([11,  3, 11,  9,  5,  5, 10,  8,  5,  2,  4,  1], dtype=int32), 'std_score_time': array([ 0.06765071,  0.10288663,  0.10072404,  0.09500937,  0.01796701,
        0.02268343,  0.01985184,  0.04454923,  0.03496527,  0.01716861,
        0.02276033,  0.08226447]), 'split2_test_score': array([ 0.64963504,  0.67153285,  0.65693431,  0.67153285,  0.67883212,
        0.67883212,  0.65693431,  0.66423358,  0.69343066,  0.7080292 ,
        0.67883212,  0.7080292 ]), 'mean_fit_time': array([ 2.31714382,  3.6280354 ,  5.55546064,  6.63000011,  1.9209156 ,
        3.13751011,  4.51631422,  6.44948621,  1.95748296,  3.38979635,
        4.28170142,  4.86832576]), 'split3_train_score': array([ 0.98542805,  0.98360656,  0.98542805,  0.98542805,  1.        ,
        1.        ,  1.        ,  1.        ,  1.        ,  1.        ,
        1.        ,  1.        ]), 'std_test_score': array([ 0.03249989,  0.01896011,  0.02800108,  0.0352393 ,  0.03594463,
        0.02639975,  0.03282426,  0.02499605,  0.03681636,  0.03836154,
        0.0286913 ,  0.03408987]), 'params': ({'n_estimators': 300, 'max_depth': 7}, {'n_estimators': 500, 'max_depth': 7}, {'n_estimators': 700, 'max_depth': 7}, {'n_estimators': 1000, 'max_depth': 7}, {'n_estimators': 300, 'max_depth': 12}, {'n_estimators': 500, 'max_depth': 12}, {'n_estimators': 700, 'max_depth': 12}, {'n_estimators': 1000, 'max_depth': 12}, {'n_estimators': 300, 'max_depth': 15}, {'n_estimators': 500, 'max_depth': 15}, {'n_estimators': 700, 'max_depth': 15}, {'n_estimators': 1000, 'max_depth': 15}), 'std_fit_time': array([ 0.10327402,  0.23436491,  0.27716636,  0.77085865,  0.09140077,
        0.10528325,  0.21679579,  0.13097168,  0.11310598,  0.18841327,
        0.47042352,  0.51361713]), 'std_train_score': array([ 0.00438857,  0.0041729 ,  0.00408988,  0.00137036,  0.        ,
        0.        ,  0.        ,  0.        ,  0.        ,  0.        ,
        0.        ,  0.        ]), 'split4_test_score': array([ 0.56617647,  0.625     ,  0.58823529,  0.59558824,  0.625     ,
        0.59558824,  0.59558824,  0.625     ,  0.60294118,  0.64705882,
        0.59558824,  0.61029412]), 'param_max_depth': masked_array(data = [7 7 7 7 12 12 12 12 15 15 15 15],
             mask = [False False False False False False False False False False False False],
       fill_value = ?)
, 'split1_train_score': array([ 0.98175182,  0.97992701,  0.98357664,  0.98175182,  1.        ,
        1.        ,  1.        ,  1.        ,  1.        ,  1.        ,
        1.        ,  1.        ]), 'split2_train_score': array([ 0.97814208,  0.97632058,  0.97449909,  0.98178506,  1.        ,
        1.        ,  1.        ,  1.        ,  1.        ,  1.        ,
        1.        ,  1.        ]), 'split3_test_score': array([ 0.64963504,  0.64233577,  0.64963504,  0.65693431,  0.64963504,
        0.6350365 ,  0.64963504,  0.65693431,  0.66423358,  0.64233577,
        0.64963504,  0.65693431]), 'split4_train_score': array([ 0.97272727,  0.98545455,  0.98545455,  0.98363636,  1.        ,
        1.        ,  1.        ,  1.        ,  1.        ,  1.        ,
        1.        ,  1.        ]), 'mean_score_time': array([ 0.41267915,  0.56902299,  0.925951  ,  0.99340396,  0.27885375,
        0.48103328,  0.65299492,  0.95944381,  0.30818024,  0.4975502 ,
        0.67344193,  0.72445526]), 'split0_train_score': array([ 0.97627737,  0.97445255,  0.98357664,  0.98357664,  1.        ,
        1.        ,  1.        ,  1.        ,  1.        ,  1.        ,
        1.        ,  1.        ]), 'mean_train_score': array([ 0.97886532,  0.97995225,  0.98250699,  0.98323559,  1.        ,
        1.        ,  1.        ,  1.        ,  1.        ,  1.        ,
        1.        ,  1.        ]), 'split0_test_score': array([ 0.60144928,  0.63768116,  0.61594203,  0.63768116,  0.65217391,
        0.63043478,  0.63768116,  0.63043478,  0.60144928,  0.5942029 ,
        0.64492754,  0.63768116]), 'mean_test_score': array([ 0.62099125,  0.63848397,  0.62099125,  0.62827988,  0.63556851,
        0.63556851,  0.62244898,  0.63411079,  0.63556851,  0.64139942,
        0.63702624,  0.64723032]), 'param_n_estimators': masked_array(data = [300 500 700 1000 300 500 700 1000 300 500 700 1000],
             mask = [False False False False False False False False False False False False],
       fill_value = ?)
, 'split1_test_score': array([ 0.63768116,  0.61594203,  0.5942029 ,  0.57971014,  0.57246377,
        0.63768116,  0.57246377,  0.5942029 ,  0.61594203,  0.61594203,
        0.61594203,  0.62318841])}
Best RFC RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=15, max_features='auto', max_leaf_nodes=None,
            min_impurity_split=1e-07, min_samples_leaf=1,
            min_samples_split=2, min_weight_fraction_leaf=0.0,
            n_estimators=1000, n_jobs=1, oob_score=False,
            random_state=None, verbose=0, warm_start=False)
Best CV score for RFC 0.6472303207
Best RFC  params: {'n_estimators': 1000, 'max_depth': 15}
Finished in:  326.468218088
Speech Dispatcher already running.

[Sat Dec 10 19:30:43 2016 : 455659] speechd: Speech Dispatcher 0.8 starting
[Sat Dec 10 19:30:43 2016 : 455736] speechd: Speech Dispatcher already running.


Process finished with exit code 0
