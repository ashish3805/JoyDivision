/home/bhavika/anaconda2/bin/python /home/bhavika/PycharmProjects/JoyDivision/src/gridsearch_rfc.py
<class 'pandas.core.frame.DataFrame'>
Int64Index: 688 entries, 2 to 1136
Columns: 126 entries, File to pitchcomp_7
dtypes: float64(108), int64(5), object(13)
memory usage: 682.6+ KB
None
RFC grid search:
CV results {'rank_test_score': array([ 2,  2,  9,  5,  4, 11,  5,  5,  8,  1, 12,  9], dtype=int32), 'std_score_time': array([ 0.03633472,  0.03946117,  0.05767302,  0.06936975,  0.01893327,
        0.02690604,  0.07237939,  0.0760266 ,  0.02145569,  0.02605833,
        0.0225698 ,  0.08995964]), 'split2_test_score': array([ 0.63043478,  0.5942029 ,  0.5942029 ,  0.60869565,  0.63043478,
        0.61594203,  0.60869565,  0.63043478,  0.63043478,  0.63768116,
        0.60869565,  0.62318841]), 'mean_fit_time': array([ 1.62631459,  3.08248425,  3.90439444,  4.56232357,  1.42185416,
        2.71888437,  3.30882821,  3.8029356 ,  1.2563098 ,  1.62859521,
        2.24070377,  3.50448642]), 'split3_train_score': array([ 0.95272727,  0.95818182,  0.95818182,  0.95090909,  1.        ,
        1.        ,  1.        ,  1.        ,  1.        ,  1.        ,
        1.        ,  1.        ]), 'std_test_score': array([ 0.04521973,  0.06020551,  0.05650322,  0.05727179,  0.03695833,
        0.04525571,  0.0574554 ,  0.05275723,  0.05214967,  0.03376639,
        0.04413881,  0.04795167]), 'params': ({'n_estimators': 300, 'max_depth': 7}, {'n_estimators': 500, 'max_depth': 7}, {'n_estimators': 700, 'max_depth': 7}, {'n_estimators': 1000, 'max_depth': 7}, {'n_estimators': 300, 'max_depth': 12}, {'n_estimators': 500, 'max_depth': 12}, {'n_estimators': 700, 'max_depth': 12}, {'n_estimators': 1000, 'max_depth': 12}, {'n_estimators': 300, 'max_depth': 15}, {'n_estimators': 500, 'max_depth': 15}, {'n_estimators': 700, 'max_depth': 15}, {'n_estimators': 1000, 'max_depth': 15}), 'std_fit_time': array([ 0.06674797,  0.28392725,  0.36914564,  0.23938336,  0.06839053,
        0.2784093 ,  0.43423428,  0.49007237,  0.08604372,  0.09963385,
        0.05090404,  0.28227452]), 'std_train_score': array([ 0.00721668,  0.00564805,  0.00471637,  0.00581281,  0.        ,
        0.        ,  0.        ,  0.        ,  0.        ,  0.        ,
        0.        ,  0.        ]), 'split4_test_score': array([ 0.71323529,  0.71323529,  0.70588235,  0.70588235,  0.69852941,
        0.69117647,  0.70588235,  0.71323529,  0.69117647,  0.69117647,
        0.69117647,  0.69852941]), 'param_max_depth': masked_array(data = [7 7 7 7 12 12 12 12 15 15 15 15],
             mask = [False False False False False False False False False False False False],
       fill_value = ?)
, 'split1_train_score': array([ 0.95272727,  0.95818182,  0.95636364,  0.95818182,  1.        ,
        1.        ,  1.        ,  1.        ,  1.        ,  1.        ,
        1.        ,  1.        ]), 'split2_train_score': array([ 0.97090909,  0.96909091,  0.96727273,  0.96909091,  1.        ,
        1.        ,  1.        ,  1.        ,  1.        ,  1.        ,
        1.        ,  1.        ]), 'split3_test_score': array([ 0.63768116,  0.68115942,  0.66666667,  0.66666667,  0.65942029,
        0.68115942,  0.6884058 ,  0.66666667,  0.65217391,  0.69565217,
        0.66666667,  0.68115942]), 'split4_train_score': array([ 0.95471014,  0.95652174,  0.95471014,  0.95833333,  1.        ,
        1.        ,  1.        ,  1.        ,  1.        ,  1.        ,
        1.        ,  1.        ]), 'mean_score_time': array([ 0.28720498,  0.43835759,  0.60496492,  0.77143264,  0.24263744,
        0.41273799,  0.58124866,  0.63640442,  0.17843604,  0.31339202,
        0.39077201,  0.61340418]), 'split0_train_score': array([ 0.96363636,  0.96909091,  0.95454545,  0.96      ,  1.        ,
        1.        ,  1.        ,  1.        ,  1.        ,  1.        ,
        1.        ,  1.        ]), 'mean_train_score': array([ 0.95894203,  0.96221344,  0.95821476,  0.95930303,  1.        ,
        1.        ,  1.        ,  1.        ,  1.        ,  1.        ,
        1.        ,  1.        ]), 'split0_test_score': array([ 0.72463768,  0.73913043,  0.7173913 ,  0.73188406,  0.70289855,
        0.6884058 ,  0.7173913 ,  0.71014493,  0.72463768,  0.69565217,
        0.69565217,  0.6884058 ]), 'mean_test_score': array([ 0.66424419,  0.66424419,  0.65261628,  0.65843023,  0.65988372,
        0.65116279,  0.65843023,  0.65843023,  0.65406977,  0.66715116,
        0.6497093 ,  0.65261628]), 'param_n_estimators': masked_array(data = [300 500 700 1000 300 500 700 1000 300 500 700 1000],
             mask = [False False False False False False False False False False False False],
       fill_value = ?)
, 'split1_test_score': array([ 0.61594203,  0.5942029 ,  0.57971014,  0.57971014,  0.60869565,
        0.57971014,  0.57246377,  0.57246377,  0.57246377,  0.61594203,
        0.58695652,  0.57246377])}
Best RFC RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=15, max_features='auto', max_leaf_nodes=None,
            min_impurity_split=1e-07, min_samples_leaf=1,
            min_samples_split=2, min_weight_fraction_leaf=0.0,
            n_estimators=500, n_jobs=1, oob_score=False, random_state=None,
            verbose=0, warm_start=False)
Best CV score for RFC 0.667151162791
Best RFC  params: {'n_estimators': 500, 'max_depth': 15}
Finished in:  224.613205194
[Fri Dec  9 12:34:56 2016 : 425173] speechd: Speech Dispatcher 0.8 starting
[Fri Dec  9 12:34:56 2016 : 425262] speechd: Speech Dispatcher already running.

Speech Dispatcher already running.


Process finished with exit code 0
